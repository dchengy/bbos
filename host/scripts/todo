#!/bin/bash
set -eu -o pipefail

# generate todo.md, an aggregation of todos in this repo (that includes itself!)

if ! [ -x "$(command -v ag)" ]; then
  echo "todo uses ag" >&2
  exit 1
fi

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
PROJDIR="${MYDIR}/../.."
OUT="${PROJDIR}/todo.md"

# grab todos from existing out file
OUTCOMMENTS=$({ test -f "${OUT}" && ag --nocolor --nogroup --nonumbers "\[comment\]: #" "${OUT}" | sort; } || echo "")
# (re)create out file
:> "${OUT}"

# grab all other todos
# may consider ignoring this file since it contains many instances of "todo",
# but seems ok so far
TODOS=$({ ag --nocolor --nogroup "todo" "${PROJDIR}" | sort; } || echo  "")

i=1
if [ "${TODOS}" != "" ]; then 
  while IFS=$'\n' read -r -a LINES; do
    for e in "${LINES[@]}"; do
      while IFS=":" read -r -a LINE; do
        # this is pretty brittle...but good enough
        if ((${#LINE[@]} != 4)); then
          continue
        fi

        FILE="${LINE[0]}"
        if ! [ -f "${PROJDIR}/${FILE}" ]; then
          continue
        fi

        N="${LINE[1]}"
        if ! [[ "${N}" =~ ^[0-9]+$ ]]; then
          continue
        fi

        TODO="${LINE[3]}"
        # don't recurse lol
        if [[ "${TODO}" = *"todo"* ]]; then
          continue
        fi

        printf "%d. [%s#L%d:%s](%s#L%d)\n" "${i}" "${FILE}" "${N}" "${TODO}" "${FILE}" "${N}" >> todo.md
        i=$((i+1))
      done <<< "${e#"${PROJDIR}/"}"
    done
  done <<< "${TODOS}"
fi

# handle todo.md separately. namely, expected format is slightly different
# (markdown comment) and we don't include line numbers
if [ "${OUTCOMMENTS}" != "" ]; then 
  while IFS=$'\n' read -r -a LINES; do
    for e in "${LINES[@]}"; do
      while IFS=":" read -r -a LINE; do
        TODO=$(echo "${LINE[1]}" | cut -d "(" -f2 | cut -d ")" -f1)

        printf "%d. [todo.md: %s](todo.md)\n" "${i}" "${TODO}" >> todo.md
        i=$((i+1))
      done <<< "${e}"
    done
  done <<< "${OUTCOMMENTS}"

  # be sure to (re)include todo.md's todos
  echo "" >> "${OUT}"
  echo "${OUTCOMMENTS}" >> "${OUT}"
fi
